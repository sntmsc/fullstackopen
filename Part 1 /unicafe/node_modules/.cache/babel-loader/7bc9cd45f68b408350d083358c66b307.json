{"ast":null,"code":"var _jsxFileName = \"/home/sntmsc/Documentos/CODE/fullstackopen/part1-unicafe/unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst All = ({\n  good,\n  neutral,\n  bad\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"all \", good + neutral + bad]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = All;\n\nconst Average = ({\n  average\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"average \", average.join('')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Average;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let average = [];\n\n  const goodClick = () => {\n    setGood(good + 1);\n    average.push(1);\n  };\n\n  const neutralClick = () => {\n    setNeutral(neutral + 1);\n    average.push(0);\n  };\n\n  const badClick = () => {\n    setBad(bad + 1);\n    average.push(-1);\n    console.log(average);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: neutralClick,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: badClick,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(All, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Average, {\n      average: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"All\");\n$RefreshReg$(_c2, \"Average\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/sntmsc/Documentos/CODE/fullstackopen/part1-unicafe/unicafe/src/index.js"],"names":["React","useState","ReactDOM","All","good","neutral","bad","Average","average","join","App","setGood","setNeutral","setBad","goodClick","push","neutralClick","badClick","console","log","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA0B;AACpC,sBACE;AAAA,uBAAQF,IAAI,GAACC,OAAL,GAAaC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMH,G;;AAMN,MAAMI,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC7B,sBACE;AAAA,2BAAYA,OAAO,CAACC,IAAR,CAAa,EAAb,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMF,O;;AAKN,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUO,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,GAAD,EAAMO,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;AAEA,MAAIO,OAAO,GAAG,EAAd;;AAEA,QAAMM,SAAS,GAAE,MAAM;AACrBH,IAAAA,OAAO,CAACP,IAAI,GAAC,CAAN,CAAP;AACAI,IAAAA,OAAO,CAACO,IAAR,CAAa,CAAb;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAE,MAAM;AACxBJ,IAAAA,UAAU,CAACP,OAAO,GAAC,CAAT,CAAV;AACAG,IAAAA,OAAO,CAACO,IAAR,CAAa,CAAb;AACD,GAHD;;AAKA,QAAME,QAAQ,GAAE,MAAM;AACpBJ,IAAAA,MAAM,CAACP,GAAG,GAAC,CAAL,CAAN;AACAE,IAAAA,OAAO,CAACO,IAAR,CAAa,CAAC,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,0BAASb,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,6BAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,yBAAQC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEF,IAAX;AAAiB,MAAA,OAAO,EAAEC,OAA1B;AAAmC,MAAA,GAAG,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtCD;;GAAME,G;;MAAAA,G;AAwCNR,QAAQ,CAACkB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst All = ({good, neutral, bad}) => {\n  return(\n    <p>all {good+neutral+bad}</p>\n)\n}\n\nconst Average = ({average}) => {\n  return(\n    <p>average {average.join('')}</p>\n  )\n}\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n  let average = []\n\n  const goodClick= () => {\n    setGood(good+1);\n    average.push(1);\n  }\n\n  const neutralClick= () => {\n    setNeutral(neutral+1);\n    average.push(0);\n  }\n\n  const badClick= () => {\n    setBad(bad+1);\n    average.push(-1);\n    console.log(average)\n  }\n\n  return (\n    <div>\n      <h2>Give feedback</h2>\n      <button onClick={goodClick}>good</button>\n      <button onClick={neutralClick}>neutral</button>\n      <button onClick={badClick}>bad</button>\n      <h2>Statistics</h2>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <All good={good} neutral={neutral} bad={bad}/>\n      <Average average={average}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}