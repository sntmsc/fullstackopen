{"ast":null,"code":"var _jsxFileName = \"/home/sntmsc/Documentos/CODE/fullstackopen/part1-unicafe/unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.goodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.neutralClick,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.badClick,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = ({\n  all\n}) => {\n  const average = (all.good * 1 + all.neutral * 0 + all.bad * -1) / all.total;\n  const positive = all.good * 100 / all.total;\n\n  if (all.total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", all.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", all.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", all.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all.good + all.neutral + all.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    total: good + neutral + bad\n  };\n\n  const goodClick = () => {\n    setGood(good + 1);\n  };\n\n  const neutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const badClick = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      goodClick: goodClick,\n      neutralClick: neutralClick,\n      badClick: badClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/sntmsc/Documentos/CODE/fullstackopen/part1-unicafe/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","goodClick","neutralClick","badClick","Statistics","all","average","good","neutral","bad","total","positive","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => {\n  return(\n    <div>\n      <button onClick={props.goodClick}>good</button>\n      <button onClick={props.neutralClick}>neutral</button>\n      <button onClick={props.badClick}>bad</button>\n    </div>\n  )\n}\n\nconst Statistics = ({all}) => {\n  const average = ((all.good*1)+(all.neutral*0)+(all.bad*(-1)))/(all.total);\n  const positive = (all.good*100)/all.total;\n  if(all.total===0){\n    return(\n      <p>No feedback given</p>\n    )\n  }\n  return(\n    <div>\n      <h2>Statistics</h2>\n      <p>good {all.good}</p>\n      <p>neutral {all.neutral}</p>\n      <p>bad {all.bad}</p>\n      <p>all {all.good+all.neutral+all.bad}</p>\n      <p>average {average}</p>\n      <p>positive {positive}%</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all={\n    good:good,\n    neutral:neutral,\n    bad:bad,\n    total:good+neutral+bad\n  }\n\n  const goodClick= () => {\n    setGood(good+1);\n  }\n\n  const neutralClick= () => {\n    setNeutral(neutral+1);\n  }\n\n  const badClick= () => {\n    setBad(bad+1);\n  }\n\n  return (\n    <div>\n      <h2>Give feedback</h2>\n      <Button goodClick={goodClick} neutralClick={neutralClick} badClick={badClick}/>\n      <Statistics all={all}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}