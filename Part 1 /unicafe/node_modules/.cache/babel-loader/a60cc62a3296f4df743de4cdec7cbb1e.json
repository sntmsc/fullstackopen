{"ast":null,"code":"var _jsxFileName = \"/home/sntmsc/Documentos/CODE/fullstackopen/part1-unicafe/unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.function,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.text, props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 4\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    total: good + neutral + bad\n  };\n  const average = (all.good * 1 + all.neutral * 0 + all.bad * -1) / all.total;\n  const positive = all.good * 100 / all.total + '%';\n\n  const goodClick = () => {\n    setGood(good + 1);\n  };\n\n  const neutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const badClick = () => {\n    setBad(bad + 1);\n  };\n\n  if (all.total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      function: setGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      function: setNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      function: setBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      all: all,\n      text: \"good \",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      all: all,\n      text: \"neutral \",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      all: all,\n      text: \"bad \",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      all: all,\n      text: \"all \",\n      value: all.total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      all: all,\n      text: \"average \",\n      value: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      all: all,\n      text: \"positive \",\n      value: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/sntmsc/Documentos/CODE/fullstackopen/part1-unicafe/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","function","text","Statistics","value","App","good","setGood","neutral","setNeutral","bad","setBad","all","total","average","positive","goodClick","neutralClick","badClick","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => {\n  return(\n    <div>\n      <button onClick={props.function}>{text}</button>\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n \n\n  return(\n   <p>{props.text}{props.value}</p>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all={\n    good:good,\n    neutral:neutral,\n    bad:bad,\n    total:good+neutral+bad\n  }\n\n  const average = ((all.good*1)+(all.neutral*0)+(all.bad*(-1)))/(all.total);\n  const positive = ((all.good*100)/all.total)+'%';\n\n  const goodClick= () => {\n    setGood(good+1);\n  }\n\n  const neutralClick= () => {\n    setNeutral(neutral+1);\n  }\n\n  const badClick= () => {\n    setBad(bad+1);\n  }\n  if(all.total===0){\n    return(\n      <p>No feedback given</p>\n    )\n  }\n  return (\n    <div>\n      <h2>Give feedback</h2>\n      <Button function={setGood} text=\"good\"/>\n      <Button function={setNeutral} text=\"neutral\"/>\n      <Button function={setBad} text=\"bad\"/>\n      <h2>Statistics</h2>\n      <Statistics all={all} text=\"good \" value={good}/>\n      <Statistics all={all} text=\"neutral \" value={neutral}/>\n      <Statistics all={all} text=\"bad \" value={bad}/>\n      <Statistics all={all} text=\"all \" value={all.total}/>\n      <Statistics all={all} text=\"average \" value={average}/>\n      <Statistics all={all} text=\"positive \" value={positive}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}